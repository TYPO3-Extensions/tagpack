plugin {
    tx_tagpack_pi3 = COA_INT
    tx_tagpack_pi3 {
        10 = USER
	10 {
    	    userFunc = tx_tagpack_pi3->main
    	    taggedElements {
        	enabledContent = {$plugin.tx_tagpack_pi1.enabledContent}
		contentLabel = {$plugin.tx_tagpack_pi3.contentLabel}
        	enabledRecords = {$plugin.tx_tagpack_pi1.enabledRecords}
		recordLabels.tt_news = {$plugin.tx_tagpack_pi3.recordLabels.tt_news}
		recordLabels.pages = {$plugin.tx_tagpack_pi3.recordLabels.pages}
        	startingpoint = {$plugin.tx_tagpack_pi3.startingpoint}
        	headerWrap = {$plugin.tx_tagpack_pi3.headerWrap}
        	groupWrap = {$plugin.tx_tagpack_pi3.groupWrap}
        	itemWrap = {$plugin.tx_tagpack_pi3.itemWrap}
		breadcrumbWrap = {$plugin.tx_tagpack_pi3.breadcrumbWrap}
		maxItems = 25
		timeFields {
#################################################
#	    FIELD TO BE USED FOR THE TIMEFRAME
#	    OF EACH TABLE
#			tablename = fieldname
#################################################
		}
		searchFields {
#################################################
#	    FIELD(S) TO BE USED FOR THE FULLLTEXT
#	    SEARCH OF EACH TABLE
#			tablename = fieldname
#################################################
		}
		additionalFilters {
#################################################
#	    FIELD(S) TO BE USED FOR ADDITIONAL
#	    FILTERING OF EACH TABLE
#	    I.E. NEWS CATEGORIES
#    			tablename {
#		    	fieldname {
#		    		GETvar = parametername
#		        	GETvar {
#		          		key = arrayKey if any
#		        	}
#		       	 	mm_table = tablename
#		        	foreign_table = tablename
#		    	}
# 			}
#################################################
		}
#################################################
#	    FILL IN YOUR OWN TS FOR THE RENDERING
#	    OF EACH TABLE'S RESULT LIST
#	    	tablename = COA
#	    	tablename {
#			10 = TEXT
#			10.data = {field:somefield}
#	    	}
#################################################
    	    }
    	    renderObj = COA
    	    renderObj {
        	wrap = {$plugin.tx_tagpack_pi3.allWrap}
    	    }
	}
    }
}